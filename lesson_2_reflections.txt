What happens when you initialize a repository? Why do you need to do it?


There is no history of commits.
Using the command   git status  reveals if the git repository requires an initial commit.


    All files ar untracked if the repositiory has just been initialised as they have not been 'added' to git






How is the staging area different from the working directory and the repository?
What value do you think it offers?


    You might not want to track all files in the working directory; only when they are put in the staging area are they tracked.

    As you complete code on a file you can pass it to the staging area, and only when all the files needed for that logical stage are completed are they commited





How can you use the staging area to make sure you have one commit per logical change?

    By having a staging area you have a 'half way house' so can caustiously prepare the things you want to commit before actually commiting them.
    Several files might need adjusting before a commit is waranted








What are some situations when branches would be helpful in keeping your history organized? How would branches help?

    An experimental feature, a demo, something part finished thats not to be confused with the finished master version








How do the diagrams help you visualize the branch structure?

To easily emebmer what a branch was for and where its leading to, perhaps readying to merge the branch in future







What is the result of merging two branches together? 
Why do we represent it in the diagram the way we do?








What are the pros and cons of Gits automatic merging vs. always doing merges manually?

    Get to merge as much as possible, but at the same time a programmer can check the unkown areas that need a detailed eye or desion to be made.


